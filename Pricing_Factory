{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Pricing Factory:\n",
    "* [1. Libraries](#first-bullet)\n",
    "* [2. Load data and tables](#second-bullet)\n",
    "* [3. Notebook functions](#third-bullet)\n",
    "* [4. Offsets and special adjustments](#fourth-bullet)\n",
    "* [5. Pricing factory](#fifth-bullet)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Libraries <a class=\"anchor\" id=\"first-bullet\"></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import datarobot as dr\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "pd.options.mode.chained_assignment = None"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. Load data and tables <a class=\"anchor\" id=\"second-bullet\"></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ndspolicyid</th>\n",
       "      <th>EndorsementNum</th>\n",
       "      <th>VehicleNum</th>\n",
       "      <th>TermEffectiveDate</th>\n",
       "      <th>TermExpirationDate</th>\n",
       "      <th>effectivedate</th>\n",
       "      <th>pol_year</th>\n",
       "      <th>term</th>\n",
       "      <th>policysuffixnum</th>\n",
       "      <th>SourceSystemCode</th>\n",
       "      <th>GoverningStateCode</th>\n",
       "      <th>OriginalEffectiveDate</th>\n",
       "      <th>tenure</th>\n",
       "      <th>num_non_drv</th>\n",
       "      <th>num_excl_drv</th>\n",
       "      <th>num_oth_ins_drv</th>\n",
       "      <th>num_drv</th>\n",
       "      <th>PPAVehNum</th>\n",
       "      <th>package</th>\n",
       "      <th>EFT</th>\n",
       "      <th>ADQ</th>\n",
       "      <th>SR22</th>\n",
       "      <th>PIF</th>\n",
       "      <th>Paperless</th>\n",
       "      <th>tier_rad6</th>\n",
       "      <th>BIGroup</th>\n",
       "      <th>VehAge_incept</th>\n",
       "      <th>HO</th>\n",
       "      <th>class_ins_exp</th>\n",
       "      <th>any_acc_ind_p</th>\n",
       "      <th>any_acc_ind_gt36_p</th>\n",
       "      <th>ActionCode_v5</th>\n",
       "      <th>SRMActionCode</th>\n",
       "      <th>ProductVersionName</th>\n",
       "      <th>DistributionChannel</th>\n",
       "      <th>veh_hist_v2</th>\n",
       "      <th>ModelYearNum</th>\n",
       "      <th>VIN</th>\n",
       "      <th>symbol8bi</th>\n",
       "      <th>symbol8mp</th>\n",
       "      <th>symbol8cp</th>\n",
       "      <th>symbol8cl</th>\n",
       "      <th>GaragingZipCode</th>\n",
       "      <th>Terr_bipd</th>\n",
       "      <th>Terr_CP</th>\n",
       "      <th>Terr_CL</th>\n",
       "      <th>Terr_mppip</th>\n",
       "      <th>limitbi</th>\n",
       "      <th>limitpd</th>\n",
       "      <th>dedcl</th>\n",
       "      <th>dedcp</th>\n",
       "      <th>PIP_lmt</th>\n",
       "      <th>limitmp</th>\n",
       "      <th>YoungDrv</th>\n",
       "      <th>OldDrv</th>\n",
       "      <th>Parent_Child</th>\n",
       "      <th>VehAge</th>\n",
       "      <th>youthful_pni</th>\n",
       "      <th>youthful_on_pol</th>\n",
       "      <th>parent_child_rel_on_pol</th>\n",
       "      <th>PNIAge</th>\n",
       "      <th>BI_EP</th>\n",
       "      <th>PD_EP</th>\n",
       "      <th>MED_EP</th>\n",
       "      <th>PIP_EP</th>\n",
       "      <th>COLL_EP</th>\n",
       "      <th>COMP_EP</th>\n",
       "      <th>biinc</th>\n",
       "      <th>pdinc</th>\n",
       "      <th>mpinc</th>\n",
       "      <th>pipinc</th>\n",
       "      <th>cpinc</th>\n",
       "      <th>clinc</th>\n",
       "      <th>biclc</th>\n",
       "      <th>pdclc</th>\n",
       "      <th>mpclc</th>\n",
       "      <th>pipclc</th>\n",
       "      <th>cpclc</th>\n",
       "      <th>clclc</th>\n",
       "      <th>biexp</th>\n",
       "      <th>pdexp</th>\n",
       "      <th>mpexp</th>\n",
       "      <th>pipexp</th>\n",
       "      <th>cpexp</th>\n",
       "      <th>clexp</th>\n",
       "      <th>tot_exp</th>\n",
       "      <th>tot_ep</th>\n",
       "      <th>totinc</th>\n",
       "      <th>tot_clc</th>\n",
       "      <th>SpeedsCount_gt36_pol</th>\n",
       "      <th>SppCount_gt36_pol</th>\n",
       "      <th>SpdCount_gt36_pol</th>\n",
       "      <th>DwisCount_gt36_pol</th>\n",
       "      <th>MinorCount_gt36_pol</th>\n",
       "      <th>MajorCount_gt36_pol</th>\n",
       "      <th>AfaCount_gt36_pol</th>\n",
       "      <th>NafaCount_gt36_pol</th>\n",
       "      <th>SpeedsCount_pol</th>\n",
       "      <th>SppCount_pol</th>\n",
       "      <th>SpdCount_pol</th>\n",
       "      <th>DwisCount_pol</th>\n",
       "      <th>MinorCount_pol</th>\n",
       "      <th>MajorCount_pol</th>\n",
       "      <th>AfaCount_pol</th>\n",
       "      <th>NafaCount_pol</th>\n",
       "      <th>biprem_theo</th>\n",
       "      <th>pdprem_theo</th>\n",
       "      <th>cpprem_theo</th>\n",
       "      <th>clprem_theo</th>\n",
       "      <th>mpprem_theo</th>\n",
       "      <th>pipprem_theo</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1019432</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>01JAN2013:00:00:00</td>\n",
       "      <td>01JUL2013:00:00:00</td>\n",
       "      <td>01JAN2013:00:00:00</td>\n",
       "      <td>2013</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>N</td>\n",
       "      <td>OH</td>\n",
       "      <td>01JUL2008:00:00:00</td>\n",
       "      <td>54</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>z.a.N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>E</td>\n",
       "      <td>F</td>\n",
       "      <td>RAD3.5</td>\n",
       "      <td>Direct</td>\n",
       "      <td>15.0</td>\n",
       "      <td>2001</td>\n",
       "      <td>1G8JU52F81Y546761</td>\n",
       "      <td>B</td>\n",
       "      <td>B</td>\n",
       "      <td>04</td>\n",
       "      <td>09</td>\n",
       "      <td>45014</td>\n",
       "      <td>18</td>\n",
       "      <td>01</td>\n",
       "      <td>09</td>\n",
       "      <td>11</td>\n",
       "      <td>100/300</td>\n",
       "      <td>50</td>\n",
       "      <td>500</td>\n",
       "      <td>500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22</td>\n",
       "      <td>58</td>\n",
       "      <td>1</td>\n",
       "      <td>12.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>58</td>\n",
       "      <td>56.564384</td>\n",
       "      <td>58.997260</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>69.336986</td>\n",
       "      <td>20.071233</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.304110</td>\n",
       "      <td>0.304110</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.304110</td>\n",
       "      <td>0.304110</td>\n",
       "      <td>0.304110</td>\n",
       "      <td>204.969863</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>38.09</td>\n",
       "      <td>34.01</td>\n",
       "      <td>3.72</td>\n",
       "      <td>21.82</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1019432</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>01JAN2013:00:00:00</td>\n",
       "      <td>01JUL2013:00:00:00</td>\n",
       "      <td>01JAN2013:00:00:00</td>\n",
       "      <td>2013</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>N</td>\n",
       "      <td>OH</td>\n",
       "      <td>01JUL2008:00:00:00</td>\n",
       "      <td>54</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>z.a.N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>E</td>\n",
       "      <td>F</td>\n",
       "      <td>RAD3.5</td>\n",
       "      <td>Direct</td>\n",
       "      <td>7.0</td>\n",
       "      <td>2000</td>\n",
       "      <td>1B7HC16YXYS510210</td>\n",
       "      <td>E</td>\n",
       "      <td>9</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>45014</td>\n",
       "      <td>18</td>\n",
       "      <td>01</td>\n",
       "      <td>09</td>\n",
       "      <td>11</td>\n",
       "      <td>100/300</td>\n",
       "      <td>50</td>\n",
       "      <td>500</td>\n",
       "      <td>500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22</td>\n",
       "      <td>58</td>\n",
       "      <td>1</td>\n",
       "      <td>13.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>58</td>\n",
       "      <td>63.254795</td>\n",
       "      <td>66.295890</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>66.295890</td>\n",
       "      <td>22.504110</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.304110</td>\n",
       "      <td>0.304110</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.304110</td>\n",
       "      <td>0.304110</td>\n",
       "      <td>0.304110</td>\n",
       "      <td>218.350685</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>48.59</td>\n",
       "      <td>43.38</td>\n",
       "      <td>5.19</td>\n",
       "      <td>21.36</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1019432</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>01JAN2013:00:00:00</td>\n",
       "      <td>01JUL2013:00:00:00</td>\n",
       "      <td>01JAN2013:00:00:00</td>\n",
       "      <td>2013</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>N</td>\n",
       "      <td>OH</td>\n",
       "      <td>01JUL2008:00:00:00</td>\n",
       "      <td>54</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>z.a.N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>E</td>\n",
       "      <td>F</td>\n",
       "      <td>RAD3.5</td>\n",
       "      <td>Direct</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2010</td>\n",
       "      <td>4A32B2FFXAE008943</td>\n",
       "      <td>G</td>\n",
       "      <td>J</td>\n",
       "      <td>17</td>\n",
       "      <td>33</td>\n",
       "      <td>45014</td>\n",
       "      <td>18</td>\n",
       "      <td>01</td>\n",
       "      <td>09</td>\n",
       "      <td>11</td>\n",
       "      <td>100/300</td>\n",
       "      <td>50</td>\n",
       "      <td>500</td>\n",
       "      <td>500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22</td>\n",
       "      <td>58</td>\n",
       "      <td>1</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>58</td>\n",
       "      <td>66.904110</td>\n",
       "      <td>70.553425</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>145.364384</td>\n",
       "      <td>26.153425</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.304110</td>\n",
       "      <td>0.304110</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.304110</td>\n",
       "      <td>0.304110</td>\n",
       "      <td>0.304110</td>\n",
       "      <td>308.975342</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>52.23</td>\n",
       "      <td>46.63</td>\n",
       "      <td>10.24</td>\n",
       "      <td>55.46</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1019432</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>01JAN2013:00:00:00</td>\n",
       "      <td>01JUL2013:00:00:00</td>\n",
       "      <td>22APR2013:00:00:00</td>\n",
       "      <td>2013</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>N</td>\n",
       "      <td>OH</td>\n",
       "      <td>01JUL2008:00:00:00</td>\n",
       "      <td>54</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>z.a.N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>E</td>\n",
       "      <td>G</td>\n",
       "      <td>RAD3.5</td>\n",
       "      <td>Direct</td>\n",
       "      <td>7.0</td>\n",
       "      <td>2000</td>\n",
       "      <td>1B7HC16YXYS510210</td>\n",
       "      <td>E</td>\n",
       "      <td>9</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>45014</td>\n",
       "      <td>18</td>\n",
       "      <td>01</td>\n",
       "      <td>09</td>\n",
       "      <td>11</td>\n",
       "      <td>100/300</td>\n",
       "      <td>50</td>\n",
       "      <td>500</td>\n",
       "      <td>500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22</td>\n",
       "      <td>58</td>\n",
       "      <td>1</td>\n",
       "      <td>13.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>58</td>\n",
       "      <td>37.589041</td>\n",
       "      <td>39.506849</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>39.506849</td>\n",
       "      <td>14.191781</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.191781</td>\n",
       "      <td>0.191781</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.191781</td>\n",
       "      <td>0.191781</td>\n",
       "      <td>0.191781</td>\n",
       "      <td>130.794521</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>33.66</td>\n",
       "      <td>30.05</td>\n",
       "      <td>3.02</td>\n",
       "      <td>13.64</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1019432</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>01JAN2013:00:00:00</td>\n",
       "      <td>01JUL2013:00:00:00</td>\n",
       "      <td>22APR2013:00:00:00</td>\n",
       "      <td>2013</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>N</td>\n",
       "      <td>OH</td>\n",
       "      <td>01JUL2008:00:00:00</td>\n",
       "      <td>54</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>z.a.N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>E</td>\n",
       "      <td>G</td>\n",
       "      <td>RAD3.5</td>\n",
       "      <td>Direct</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2010</td>\n",
       "      <td>4A32B2FFXAE008943</td>\n",
       "      <td>G</td>\n",
       "      <td>J</td>\n",
       "      <td>17</td>\n",
       "      <td>33</td>\n",
       "      <td>45014</td>\n",
       "      <td>18</td>\n",
       "      <td>01</td>\n",
       "      <td>09</td>\n",
       "      <td>11</td>\n",
       "      <td>100/300</td>\n",
       "      <td>50</td>\n",
       "      <td>500</td>\n",
       "      <td>500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22</td>\n",
       "      <td>58</td>\n",
       "      <td>1</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>58</td>\n",
       "      <td>39.890411</td>\n",
       "      <td>41.808219</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>85.917808</td>\n",
       "      <td>16.493151</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.191781</td>\n",
       "      <td>0.191781</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.191781</td>\n",
       "      <td>0.191781</td>\n",
       "      <td>0.191781</td>\n",
       "      <td>184.109589</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>36.18</td>\n",
       "      <td>32.30</td>\n",
       "      <td>5.97</td>\n",
       "      <td>35.41</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   ndspolicyid  EndorsementNum  VehicleNum   TermEffectiveDate  \\\n",
       "0      1019432               0           1  01JAN2013:00:00:00   \n",
       "1      1019432               0           2  01JAN2013:00:00:00   \n",
       "2      1019432               0           3  01JAN2013:00:00:00   \n",
       "3      1019432               1           2  01JAN2013:00:00:00   \n",
       "4      1019432               1           3  01JAN2013:00:00:00   \n",
       "\n",
       "   TermExpirationDate       effectivedate  pol_year  term  policysuffixnum  \\\n",
       "0  01JUL2013:00:00:00  01JAN2013:00:00:00      2013     6                0   \n",
       "1  01JUL2013:00:00:00  01JAN2013:00:00:00      2013     6                0   \n",
       "2  01JUL2013:00:00:00  01JAN2013:00:00:00      2013     6                0   \n",
       "3  01JUL2013:00:00:00  22APR2013:00:00:00      2013     6                0   \n",
       "4  01JUL2013:00:00:00  22APR2013:00:00:00      2013     6                0   \n",
       "\n",
       "  SourceSystemCode GoverningStateCode OriginalEffectiveDate  tenure  \\\n",
       "0                N                 OH    01JUL2008:00:00:00      54   \n",
       "1                N                 OH    01JUL2008:00:00:00      54   \n",
       "2                N                 OH    01JUL2008:00:00:00      54   \n",
       "3                N                 OH    01JUL2008:00:00:00      54   \n",
       "4                N                 OH    01JUL2008:00:00:00      54   \n",
       "\n",
       "   num_non_drv  num_excl_drv  num_oth_ins_drv  num_drv  PPAVehNum  package  \\\n",
       "0            0             0                0        2          3        0   \n",
       "1            0             0                0        2          3        0   \n",
       "2            0             0                0        2          3        0   \n",
       "3            0             0                0        2          2        0   \n",
       "4            0             0                0        2          2        0   \n",
       "\n",
       "   EFT  ADQ  SR22  PIF  Paperless  tier_rad6  BIGroup  VehAge_incept  HO  \\\n",
       "0    0    0     0    1          0        3.0        4             12   1   \n",
       "1    0    0     0    1          0        3.0        4             13   1   \n",
       "2    0    0     0    1          0        3.0        4              3   1   \n",
       "3    0    0     0    1          0        3.0        4             13   1   \n",
       "4    0    0     0    1          0        3.0        4              3   1   \n",
       "\n",
       "  class_ins_exp  any_acc_ind_p  any_acc_ind_gt36_p ActionCode_v5  \\\n",
       "0         z.a.N            NaN                 NaN             E   \n",
       "1         z.a.N            NaN                 NaN             E   \n",
       "2         z.a.N            NaN                 NaN             E   \n",
       "3         z.a.N            NaN                 NaN             E   \n",
       "4         z.a.N            NaN                 NaN             E   \n",
       "\n",
       "  SRMActionCode ProductVersionName DistributionChannel  veh_hist_v2  \\\n",
       "0             F             RAD3.5              Direct         15.0   \n",
       "1             F             RAD3.5              Direct          7.0   \n",
       "2             F             RAD3.5              Direct          4.0   \n",
       "3             G             RAD3.5              Direct          7.0   \n",
       "4             G             RAD3.5              Direct          4.0   \n",
       "\n",
       "   ModelYearNum                VIN symbol8bi symbol8mp symbol8cp symbol8cl  \\\n",
       "0          2001  1G8JU52F81Y546761         B         B        04        09   \n",
       "1          2000  1B7HC16YXYS510210         E         9        10        10   \n",
       "2          2010  4A32B2FFXAE008943         G         J        17        33   \n",
       "3          2000  1B7HC16YXYS510210         E         9        10        10   \n",
       "4          2010  4A32B2FFXAE008943         G         J        17        33   \n",
       "\n",
       "   GaragingZipCode Terr_bipd Terr_CP Terr_CL Terr_mppip  limitbi limitpd  \\\n",
       "0            45014        18      01      09         11  100/300      50   \n",
       "1            45014        18      01      09         11  100/300      50   \n",
       "2            45014        18      01      09         11  100/300      50   \n",
       "3            45014        18      01      09         11  100/300      50   \n",
       "4            45014        18      01      09         11  100/300      50   \n",
       "\n",
       "  dedcl dedcp PIP_lmt limitmp  YoungDrv  OldDrv  Parent_Child  VehAge  \\\n",
       "0   500   500     NaN     NaN        22      58             1    12.0   \n",
       "1   500   500     NaN     NaN        22      58             1    13.0   \n",
       "2   500   500     NaN     NaN        22      58             1     3.0   \n",
       "3   500   500     NaN     NaN        22      58             1    13.0   \n",
       "4   500   500     NaN     NaN        22      58             1     3.0   \n",
       "\n",
       "   youthful_pni  youthful_on_pol  parent_child_rel_on_pol  PNIAge      BI_EP  \\\n",
       "0             0                0                        1      58  56.564384   \n",
       "1             0                0                        1      58  63.254795   \n",
       "2             0                0                        1      58  66.904110   \n",
       "3             0                0                        1      58  37.589041   \n",
       "4             0                0                        1      58  39.890411   \n",
       "\n",
       "       PD_EP  MED_EP  PIP_EP     COLL_EP    COMP_EP  biinc  pdinc  mpinc  \\\n",
       "0  58.997260     0.0     0.0   69.336986  20.071233    0.0    0.0    0.0   \n",
       "1  66.295890     0.0     0.0   66.295890  22.504110    0.0    0.0    0.0   \n",
       "2  70.553425     0.0     0.0  145.364384  26.153425    0.0    0.0    0.0   \n",
       "3  39.506849     0.0     0.0   39.506849  14.191781    0.0    0.0    0.0   \n",
       "4  41.808219     0.0     0.0   85.917808  16.493151    0.0    0.0    0.0   \n",
       "\n",
       "   pipinc  cpinc  clinc  biclc  pdclc  mpclc  pipclc  cpclc  clclc     biexp  \\\n",
       "0     0.0    0.0    0.0      0      0      0       0      0      0  0.304110   \n",
       "1     0.0    0.0    0.0      0      0      0       0      0      0  0.304110   \n",
       "2     0.0    0.0    0.0      0      0      0       0      0      0  0.304110   \n",
       "3     0.0    0.0    0.0      0      0      0       0      0      0  0.191781   \n",
       "4     0.0    0.0    0.0      0      0      0       0      0      0  0.191781   \n",
       "\n",
       "      pdexp  mpexp  pipexp     cpexp     clexp   tot_exp      tot_ep  totinc  \\\n",
       "0  0.304110    NaN     NaN  0.304110  0.304110  0.304110  204.969863     0.0   \n",
       "1  0.304110    NaN     NaN  0.304110  0.304110  0.304110  218.350685     0.0   \n",
       "2  0.304110    NaN     NaN  0.304110  0.304110  0.304110  308.975342     0.0   \n",
       "3  0.191781    NaN     NaN  0.191781  0.191781  0.191781  130.794521     0.0   \n",
       "4  0.191781    NaN     NaN  0.191781  0.191781  0.191781  184.109589     0.0   \n",
       "\n",
       "   tot_clc  SpeedsCount_gt36_pol  SppCount_gt36_pol  SpdCount_gt36_pol  \\\n",
       "0        0                     0                  0                  0   \n",
       "1        0                     0                  0                  0   \n",
       "2        0                     0                  0                  0   \n",
       "3        0                     0                  0                  0   \n",
       "4        0                     0                  0                  0   \n",
       "\n",
       "   DwisCount_gt36_pol  MinorCount_gt36_pol  MajorCount_gt36_pol  \\\n",
       "0                   0                    0                    0   \n",
       "1                   0                    0                    0   \n",
       "2                   0                    0                    0   \n",
       "3                   0                    0                    0   \n",
       "4                   0                    0                    0   \n",
       "\n",
       "   AfaCount_gt36_pol  NafaCount_gt36_pol  SpeedsCount_pol  SppCount_pol  \\\n",
       "0                  0                   0                0             0   \n",
       "1                  0                   0                0             0   \n",
       "2                  0                   0                0             0   \n",
       "3                  0                   0                0             0   \n",
       "4                  0                   0                0             0   \n",
       "\n",
       "   SpdCount_pol  DwisCount_pol  MinorCount_pol  MajorCount_pol  AfaCount_pol  \\\n",
       "0             0              0               0               0             0   \n",
       "1             0              0               0               0             0   \n",
       "2             0              0               0               0             0   \n",
       "3             0              0               0               0             0   \n",
       "4             0              0               0               0             0   \n",
       "\n",
       "   NafaCount_pol  biprem_theo  pdprem_theo  cpprem_theo  clprem_theo  \\\n",
       "0              0        38.09        34.01         3.72        21.82   \n",
       "1              0        48.59        43.38         5.19        21.36   \n",
       "2              0        52.23        46.63        10.24        55.46   \n",
       "3              0        33.66        30.05         3.02        13.64   \n",
       "4              0        36.18        32.30         5.97        35.41   \n",
       "\n",
       "   mpprem_theo  pipprem_theo  \n",
       "0          NaN           NaN  \n",
       "1          NaN           NaN  \n",
       "2          NaN           NaN  \n",
       "3          NaN           NaN  \n",
       "4          NaN           NaN  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# read in data\n",
    "data_in = pd.read_csv(\"input_data_data_robot2.csv\", encoding = 'ISO-8859-1')\n",
    "coverage_tbl = pd.read_csv(\"coverage_lookup.csv\")\n",
    "model_vars = pd.read_excel(\"var_list.xlsx\")\n",
    "pd.options.display.max_columns = 200\n",
    "data_in.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Coverage</th>\n",
       "      <th>Earned_Premium</th>\n",
       "      <th>Incurred_Loss</th>\n",
       "      <th>Claim_Count</th>\n",
       "      <th>Earned_Exposure</th>\n",
       "      <th>Offset</th>\n",
       "      <th>Offset_log</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>BI</td>\n",
       "      <td>BI_EP</td>\n",
       "      <td>biinc</td>\n",
       "      <td>biclc</td>\n",
       "      <td>biexp</td>\n",
       "      <td>biprem_theo</td>\n",
       "      <td>biprem_theo_offset</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>PD</td>\n",
       "      <td>PD_EP</td>\n",
       "      <td>pdinc</td>\n",
       "      <td>pdclc</td>\n",
       "      <td>pdexp</td>\n",
       "      <td>pdprem_theo</td>\n",
       "      <td>pdprem_theo_offset</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>MED</td>\n",
       "      <td>MED_EP</td>\n",
       "      <td>mpinc</td>\n",
       "      <td>mpclc</td>\n",
       "      <td>mpexp</td>\n",
       "      <td>mpprem_theo</td>\n",
       "      <td>mpprem_theo_offset</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>PIP</td>\n",
       "      <td>PIP_EP</td>\n",
       "      <td>pipinc</td>\n",
       "      <td>pipclc</td>\n",
       "      <td>pipexp</td>\n",
       "      <td>pipprem_theo</td>\n",
       "      <td>pipprem_theo_offset</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>COLL</td>\n",
       "      <td>COLL_EP</td>\n",
       "      <td>clinc</td>\n",
       "      <td>clclc</td>\n",
       "      <td>clexp</td>\n",
       "      <td>clprem_theo</td>\n",
       "      <td>clprem_theo_offset</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>COMP</td>\n",
       "      <td>COMP_EP</td>\n",
       "      <td>cpinc</td>\n",
       "      <td>cpclc</td>\n",
       "      <td>cpexp</td>\n",
       "      <td>cpprem_theo</td>\n",
       "      <td>cpprem_theo_offset</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>TOTAL</td>\n",
       "      <td>tot_ep</td>\n",
       "      <td>totinc</td>\n",
       "      <td>tot_clc</td>\n",
       "      <td>tot_exp</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Coverage Earned_Premium Incurred_Loss Claim_Count Earned_Exposure  \\\n",
       "0       BI          BI_EP         biinc       biclc           biexp   \n",
       "1       PD          PD_EP         pdinc       pdclc           pdexp   \n",
       "2      MED         MED_EP         mpinc       mpclc           mpexp   \n",
       "3      PIP         PIP_EP        pipinc      pipclc          pipexp   \n",
       "4     COLL        COLL_EP         clinc       clclc           clexp   \n",
       "5     COMP        COMP_EP         cpinc       cpclc           cpexp   \n",
       "6    TOTAL         tot_ep        totinc     tot_clc         tot_exp   \n",
       "\n",
       "         Offset           Offset_log  \n",
       "0   biprem_theo   biprem_theo_offset  \n",
       "1   pdprem_theo   pdprem_theo_offset  \n",
       "2   mpprem_theo   mpprem_theo_offset  \n",
       "3  pipprem_theo  pipprem_theo_offset  \n",
       "4   clprem_theo   clprem_theo_offset  \n",
       "5   cpprem_theo   cpprem_theo_offset  \n",
       "6           NaN                  NaN  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "coverage_tbl"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. Notebook functions <a class=\"anchor\" id=\"third-bullet\"></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# log offset columns\n",
    "def offset_log(df, col_dict):\n",
    "    for i in col_dict:\n",
    "        df[i + '_offset'] = np.log(df[i])\n",
    "    return(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# data prep for state and coverage\n",
    "def state_prep(df, state_var, state, cov, cov_tbl):\n",
    "    # look-up columns for loss, claim counts, earned exposure and offsets\n",
    "    loss_col = cov_tbl[cov_tbl['Coverage'] == cov]['Incurred_Loss'].values[0]\n",
    "    count_col = cov_tbl[cov_tbl['Coverage'] == cov]['Claim_Count'].values[0]\n",
    "    exp_col = cov_tbl[cov_tbl['Coverage'] == cov]['Earned_Exposure'].values[0]\n",
    "    offset_col = cov_tbl[cov_tbl['Coverage'] == cov]['Offset'].values[0]\n",
    "    # if CW is selected, select all states\n",
    "    if('CW' in state):\n",
    "        state = df[state_var].unique()\n",
    "    # filter by state, and remove records which don't meet coverage criteria\n",
    "    df = df[(df[state_var].isin(state)) & # filter state\n",
    "            # filters for removing negative losses, claims and theoretical premium records\n",
    "            (df[loss_col] >= 0) &\n",
    "            (df[count_col] >= 0) &\n",
    "            (df[offset_col] > 0) &\n",
    "            # filter for removing records which have losses but no claim counts and vice-versa\n",
    "            (~((df[loss_col] == 0) & (df[count_col] > 0)) | ~((df[loss_col] > 0) & (df[count_col] == 0))) &\n",
    "            # filter for removing negative, zero or NaN exposure records\n",
    "            (df[exp_col] > 0) \n",
    "            ]\n",
    "    return(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "# iterates through all combinations of state and coverage to produce multiple DR projects\n",
    "# returns dictionary containing project_id's for all projects created\n",
    "def pricing_factory(data, state_list, state_var, cov_tbl, cov_list,\n",
    "                    model_types, grp_partition_col):\n",
    "    proj_dict = {}\n",
    "    for i in state_list:\n",
    "        for j in cov_list:\n",
    "            # setup variables\n",
    "            print(i); print(j)\n",
    "            states = i; cov = j; projectname = \"_\".join(states) + \"_\" + cov; cov_tbl = coverage_tbl\n",
    "            # lookup values in coverage table\n",
    "            target = cov_tbl[cov_tbl['Coverage'] == cov]['Incurred_Loss'].values[0]\n",
    "            claim_cnt = cov_tbl[cov_tbl['Coverage'] == cov]['Claim_Count'].values[0]\n",
    "            offset_col = cov_tbl[cov_tbl['Coverage'] == cov]['Offset_log'].values[0]\n",
    "            # pull out variable list for coverage\n",
    "            var_list = model_vars[cov].values.tolist()\n",
    "            # subset dataset\n",
    "            data_subset = state_prep(df = data,\n",
    "                                     state_var = state_var,\n",
    "                                     state = states,\n",
    "                                     cov = cov,\n",
    "                                     cov_tbl = cov_tbl)\n",
    "            print(\"Finished data prep\")\n",
    "            # setup and run project\n",
    "            project = dr.Project.create(data_subset, projectname)\n",
    "            proj_dict[projectname] = project.id\n",
    "            print(\"Loaded data to DR\")\n",
    "            # create feature list\n",
    "            featurelist = project.create_featurelist('Model_Vars', var_list)\n",
    "            print(\"Created feature list\")\n",
    "            # custom setup for loss cost model\n",
    "            advanced_options = dr.AdvancedOptions(offset=[offset_col], events_count=claim_cnt)\n",
    "            partition_spec = dr.GroupCV(holdout_pct=20, reps = 5, partition_key_cols=[grp_partition_col])\n",
    "            project.set_target(target,\n",
    "                               worker_count=-1,\n",
    "                               partitioning_method=partition_spec,\n",
    "                               advanced_options=advanced_options,\n",
    "                               mode=dr.AUTOPILOT_MODE.MANUAL)\n",
    "            # train specific models\n",
    "            bp_list = blueprint_select(project, model_types)\n",
    "            for bp in bp_list:\n",
    "                project.train(bp, sample_pct = 64, featurelist_id = featurelist.id)\n",
    "    return(proj_dict)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "def blueprint_select(project, blueprint_names):\n",
    "    all_blueprints = project.get_blueprints()\n",
    "    bp_list = [bp for bp in all_blueprints if bp.model_type in blueprint_names]\n",
    "    return(bp_list)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4. Offsets and special adjustments <a class=\"anchor\" id=\"fourth-bullet\"></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "offset_cols = ['biprem_theo', 'pdprem_theo', 'cpprem_theo', 'clprem_theo', 'mpprem_theo', 'pipprem_theo']\n",
    "data_in_2 = offset_log(data_in, offset_cols)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 5. Pricing factory <a class=\"anchor\" id=\"fifth-bullet\"></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<datarobot.rest.RESTClientObject at 0x27e4781d0>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dr.Client(token='',\n",
    "          endpoint='https://app.datarobot.com/api/v2')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "###########################################\n",
    "# Specify variables for pricing factory run\n",
    "###########################################\n",
    "###########################################\n",
    "# Create multiple projects\n",
    "###########################################\n",
    "proj_dict = pricing_factory(data = data_in_2,\n",
    "                            state_list = [['CW']],\n",
    "                            state_var = 'GoverningStateCode',\n",
    "                            cov_tbl = coverage_tbl,\n",
    "                            cov_list = ['BI', 'COLL', 'COMP', 'MED', 'PD', 'PIP'],\n",
    "                            model_types = ['Generalized Additive Model (Tweedie Loss: 1.5)',\n",
    "                                           'Frequency-Severity Generalized Additive2 Model',\n",
    "                                           'Frequency-Cost Generalized Additive2 Model'],\n",
    "                            grp_partition_col = 'ndspolicyid')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
